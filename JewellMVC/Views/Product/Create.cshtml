@model JewellMVC.Models.product

@{
    ViewBag.Title = "Create";
    Layout = "~/HomePage.cshtml";
}



<header>
    <div class="top-bar_sub_w3layouts_agile">
        <h6> @Html.ActionLink("AdminLogin", "AdminLogin", "Admin") </h6>
        <div class="log">

        </div>
        <div class="clearfix"> </div>
    </div>

    <div class="header_top" id="home">
        <nav class="navbar navbar-toggleable-md navbar-light bg-faded">
            <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarNavDropdown"
                    aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <a class="navbar-brand" href="index.html">
                <i class="far fa-gem"></i>Jewel
            </a>
            <div class="collapse navbar-collapse" id="navbarNavDropdown">
                <ul class="navbar-nav">
                    <li class="nav-item active">


                        @Html.ActionLink("Home", "Index", "Home")

                    </li>
                    <li class="nav-item">
                        @Html.ActionLink("About", "About", "Home")
                    </li>

                    <li class="nav-item">
                        @Html.ActionLink("Contact", "Contact", "Home")
                    </li>
                </ul>

            </div>

        </nav>


    </div>
</header>
<!--//header-->
<!--/banner-->
<div class="banner">
    <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
        <ol class="carousel-indicators">
            <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
            <li data-target="#carouselExampleIndicators" data-slide-to="3"></li>
        </ol>
        <div class="carousel-inner" role="listbox">
            <div class="carousel-item active">
                <div class="carousel-caption">
                    <h3>Gold Jewellery </h3>
                    <h5>
                        2019
                        <span>New Looks</span>
                    </h5>
                </div>
            </div>
            <div class="carousel-item item2">
                <div class="carousel-caption">
                    <h3>Flexi Rings </h3>
                    <h5>
                        2019
                        <span>New Looks</span>
                    </h5>
                </div>
            </div>
            <div class="carousel-item item3">
                <div class="carousel-caption">
                    <h3>Gold Jewellery </h3>
                    <h5>
                        2019
                        <span>New Looks</span>
                    </h5>
                </div>
            </div>
            <div class="carousel-item item4">
                <div class="carousel-caption">
                    <h3>Flexi Rings </h3>
                    <h5>
                        2019
                        <span>New Looks</span>
                    </h5>
                </div>
            </div>
        </div>
        <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>
<!--/model-->
<!--//banner-->






<h2>Add New Product </h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.photo, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", placeholder = "Not Alowed" } })
                @Html.ValidationMessageFor(model => model.photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="btn btn-danger">
    @Html.ActionLink("Back to Main", "ViewProduct")
</div>
